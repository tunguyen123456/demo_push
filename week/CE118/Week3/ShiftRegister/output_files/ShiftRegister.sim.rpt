Simulator report for ShiftRegister
Tue Apr 13 13:12:20 2021
Quartus II 64-Bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. Simulator Summary
  3. Simulator Settings
  4. Simulation Waveforms
  5. Coverage Summary
  6. Complete 1/0-Value Coverage
  7. Missing 1-Value Coverage
  8. Missing 0-Value Coverage
  9. Simulator INI Usage
 10. Simulator Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+--------------------------------------------+
; Simulator Summary                          ;
+-----------------------------+--------------+
; Type                        ; Value        ;
+-----------------------------+--------------+
; Simulation Start Time       ; 0 ps         ;
; Simulation End Time         ; 1.0 us       ;
; Simulation Netlist Size     ; 101 nodes    ;
; Simulation Coverage         ;     100.00 % ;
; Total Number of Transitions ; 11600        ;
; Simulation Breakpoints      ; 0            ;
; Family                      ; Cyclone II   ;
+-----------------------------+--------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Simulator Settings                                                                                                                                                          ;
+--------------------------------------------------------------------------------------------+----------------------------------------------------------------+---------------+
; Option                                                                                     ; Setting                                                        ; Default Value ;
+--------------------------------------------------------------------------------------------+----------------------------------------------------------------+---------------+
; Simulation mode                                                                            ; Functional                                                     ; Timing        ;
; Start time                                                                                 ; 0 ns                                                           ; 0 ns          ;
; Simulation results format                                                                  ; VWF                                                            ;               ;
; Vector input source                                                                        ; C:/Users/Asus/Desktop/CE118/Week3/ShiftRegister/Waveform10.vwf ;               ;
; Add pins automatically to simulation output waveforms                                      ; On                                                             ; On            ;
; Check outputs                                                                              ; Off                                                            ; Off           ;
; Report simulation coverage                                                                 ; On                                                             ; On            ;
; Display complete 1/0 value coverage report                                                 ; On                                                             ; On            ;
; Display missing 1-value coverage report                                                    ; On                                                             ; On            ;
; Display missing 0-value coverage report                                                    ; On                                                             ; On            ;
; Detect setup and hold time violations                                                      ; Off                                                            ; Off           ;
; Detect glitches                                                                            ; Off                                                            ; Off           ;
; Disable timing delays in Timing Simulation                                                 ; Off                                                            ; Off           ;
; Generate Signal Activity File                                                              ; Off                                                            ; Off           ;
; Generate VCD File for PowerPlay Power Analyzer                                             ; Off                                                            ; Off           ;
; Group bus channels in simulation results                                                   ; Off                                                            ; Off           ;
; Preserve fewer signal transitions to reduce memory requirements                            ; On                                                             ; On            ;
; Trigger vector comparison with the specified mode                                          ; INPUT_EDGE                                                     ; INPUT_EDGE    ;
; Disable setup and hold time violations detection in input registers of bi-directional pins ; Off                                                            ; Off           ;
; Overwrite Waveform Inputs With Simulation Outputs                                          ; Off                                                            ;               ;
; Perform Glitch Filtering in Timing Simulation                                              ; Auto                                                           ; Auto          ;
+--------------------------------------------------------------------------------------------+----------------------------------------------------------------+---------------+


+----------------------+
; Simulation Waveforms ;
+----------------------+
Waveform report data cannot be output to ASCII.
Please use Quartus II 64-Bit to view the waveform report data.


+--------------------------------------------------------------------+
; Coverage Summary                                                   ;
+-----------------------------------------------------+--------------+
; Type                                                ; Value        ;
+-----------------------------------------------------+--------------+
; Total coverage as a percentage                      ;     100.00 % ;
; Total nodes checked                                 ; 101          ;
; Total output ports checked                          ; 101          ;
; Total output ports with complete 1/0-value coverage ; 101          ;
; Total output ports with no 1/0-value coverage       ; 0            ;
; Total output ports with no 1-value coverage         ; 0            ;
; Total output ports with no 0-value coverage         ; 0            ;
+-----------------------------------------------------+--------------+


The following table displays output ports that toggle between 1 and 0 during simulation.
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Complete 1/0-Value Coverage                                                                                                                                                                                                                                                                                          ;
+-------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                                                                       ; Output Port Name                                                                                                                                ; Output Port Type ;
+-------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+------------------+
; |ShiftRegister8BIT|OUT[7]                                                                                                                       ; |ShiftRegister8BIT|OUT[7]                                                                                                                       ; pin_out          ;
; |ShiftRegister8BIT|OUT[6]                                                                                                                       ; |ShiftRegister8BIT|OUT[6]                                                                                                                       ; pin_out          ;
; |ShiftRegister8BIT|OUT[5]                                                                                                                       ; |ShiftRegister8BIT|OUT[5]                                                                                                                       ; pin_out          ;
; |ShiftRegister8BIT|OUT[4]                                                                                                                       ; |ShiftRegister8BIT|OUT[4]                                                                                                                       ; pin_out          ;
; |ShiftRegister8BIT|OUT[3]                                                                                                                       ; |ShiftRegister8BIT|OUT[3]                                                                                                                       ; pin_out          ;
; |ShiftRegister8BIT|OUT[2]                                                                                                                       ; |ShiftRegister8BIT|OUT[2]                                                                                                                       ; pin_out          ;
; |ShiftRegister8BIT|OUT[1]                                                                                                                       ; |ShiftRegister8BIT|OUT[1]                                                                                                                       ; pin_out          ;
; |ShiftRegister8BIT|OUT[0]                                                                                                                       ; |ShiftRegister8BIT|OUT[0]                                                                                                                       ; pin_out          ;
; |ShiftRegister8BIT|LEFT                                                                                                                         ; |ShiftRegister8BIT|LEFT                                                                                                                         ; out              ;
; |ShiftRegister8BIT|RIGHT                                                                                                                        ; |ShiftRegister8BIT|RIGHT                                                                                                                        ; out              ;
; |ShiftRegister8BIT|CLOCK                                                                                                                        ; |ShiftRegister8BIT|CLOCK                                                                                                                        ; out              ;
; |ShiftRegister8BIT|IN[7]                                                                                                                        ; |ShiftRegister8BIT|IN[7]                                                                                                                        ; out              ;
; |ShiftRegister8BIT|IN[6]                                                                                                                        ; |ShiftRegister8BIT|IN[6]                                                                                                                        ; out              ;
; |ShiftRegister8BIT|IN[5]                                                                                                                        ; |ShiftRegister8BIT|IN[5]                                                                                                                        ; out              ;
; |ShiftRegister8BIT|IN[4]                                                                                                                        ; |ShiftRegister8BIT|IN[4]                                                                                                                        ; out              ;
; |ShiftRegister8BIT|IN[3]                                                                                                                        ; |ShiftRegister8BIT|IN[3]                                                                                                                        ; out              ;
; |ShiftRegister8BIT|IN[2]                                                                                                                        ; |ShiftRegister8BIT|IN[2]                                                                                                                        ; out              ;
; |ShiftRegister8BIT|IN[1]                                                                                                                        ; |ShiftRegister8BIT|IN[1]                                                                                                                        ; out              ;
; |ShiftRegister8BIT|IN[0]                                                                                                                        ; |ShiftRegister8BIT|IN[0]                                                                                                                        ; out              ;
; |ShiftRegister8BIT|S[1]                                                                                                                         ; |ShiftRegister8BIT|S[1]                                                                                                                         ; out              ;
; |ShiftRegister8BIT|S[0]                                                                                                                         ; |ShiftRegister8BIT|S[0]                                                                                                                         ; out              ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|inst                               ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|inst                               ; regout           ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst5|inst3  ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst5|inst3  ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst5|inst1  ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst5|inst1  ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst5|inst   ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst5|inst   ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst|inst3   ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst|inst3   ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst|inst1   ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst|inst1   ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst|inst    ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst|inst    ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst6|inst3  ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst6|inst3  ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst6|inst1  ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst6|inst1  ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst6|inst   ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst6|inst   ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|inst                              ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|inst                              ; regout           ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst5|inst3 ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst5|inst3 ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst5|inst1 ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst5|inst1 ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst5|inst  ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst5|inst  ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst|inst3  ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst|inst3  ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst|inst1  ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst|inst1  ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst|inst   ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst|inst   ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst6|inst3 ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst6|inst3 ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst6|inst1 ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst6|inst1 ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst6|inst  ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst6|inst  ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|inst                                ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|inst                                ; regout           ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst5|inst3   ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst5|inst3   ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst5|inst1   ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst5|inst1   ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst5|inst    ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst5|inst    ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst|inst3    ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst|inst3    ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst|inst1    ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst|inst1    ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst|inst     ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst|inst     ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst6|inst3   ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst6|inst3   ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst6|inst1   ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst6|inst1   ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst6|inst    ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst6|inst    ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|inst                               ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|inst                               ; regout           ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst5|inst3  ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst5|inst3  ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst5|inst1  ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst5|inst1  ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst5|inst   ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst5|inst   ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst|inst3   ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst|inst3   ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst|inst1   ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst|inst1   ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst|inst    ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst|inst    ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst6|inst3  ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst6|inst3  ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst6|inst1  ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst6|inst1  ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst6|inst   ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst6|inst   ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|inst                                ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|inst                                ; regout           ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst5|inst3   ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst5|inst3   ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst5|inst1   ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst5|inst1   ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst5|inst    ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst5|inst    ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst|inst3    ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst|inst3    ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst|inst1    ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst|inst1    ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst|inst     ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst|inst     ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst6|inst3   ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst6|inst3   ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst6|inst1   ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst6|inst1   ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst6|inst    ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst6|inst    ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|inst                               ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|inst                               ; regout           ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst5|inst3  ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst5|inst3  ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst5|inst1  ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst5|inst1  ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst5|inst   ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst5|inst   ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst|inst3   ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst|inst3   ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst|inst1   ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst|inst1   ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst|inst    ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst|inst    ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst6|inst3  ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst6|inst3  ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst6|inst1  ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst6|inst1  ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst6|inst   ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst6|inst   ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|inst                                 ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|inst                                 ; regout           ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst5|inst3    ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst5|inst3    ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst5|inst1    ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst5|inst1    ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst5|inst     ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst5|inst     ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst|inst3     ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst|inst3     ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst|inst1     ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst|inst1     ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst|inst      ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst|inst      ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst6|inst3    ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst6|inst3    ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst6|inst1    ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst6|inst1    ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst6|inst     ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst|MUX2BIT:inst2|MUX1BIT:inst6|inst     ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|inst                                ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|inst                                ; regout           ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst5|inst3   ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst5|inst3   ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst5|inst1   ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst5|inst1   ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst5|inst    ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst5|inst    ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst|inst3    ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst|inst3    ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst|inst1    ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst|inst1    ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst|inst     ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst|inst     ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst6|inst3   ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst6|inst3   ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst6|inst1   ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst6|inst1   ; out0             ;
; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst6|inst    ; |ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst|ShiftRegister2BIT:inst|ShiftRegister1BIT:inst3|MUX2BIT:inst2|MUX1BIT:inst6|inst    ; out0             ;
+-------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 1 during simulation.
+-------------------------------------------------+
; Missing 1-Value Coverage                        ;
+-----------+------------------+------------------+
; Node Name ; Output Port Name ; Output Port Type ;
+-----------+------------------+------------------+


The following table displays output ports that do not toggle to 0 during simulation.
+-------------------------------------------------+
; Missing 0-Value Coverage                        ;
+-----------+------------------+------------------+
; Node Name ; Output Port Name ; Output Port Type ;
+-----------+------------------+------------------+


+---------------------+
; Simulator INI Usage ;
+--------+------------+
; Option ; Usage      ;
+--------+------------+


+--------------------+
; Simulator Messages ;
+--------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit Simulator
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition
    Info: Processing started: Tue Apr 13 13:12:19 2021
Info: Command: quartus_sim --simulation_results_format=VWF ShiftRegister -c ShiftRegister
Info (324025): Using vector source file "C:/Users/Asus/Desktop/CE118/Week3/ShiftRegister/Waveform10.vwf"
Info (310003): Option to preserve fewer signal transitions to reduce memory requirements is enabled
    Info (310004): Simulation has been partitioned into sub-simulations according to the maximum transition count determined by the engine. Transitions from memory will be flushed out to disk at the end of each sub-simulation to reduce memory requirements.
Warning (324036): Found clock-sensitive change during active clock edge at time 33.0 ns on register "|ShiftRegister8BIT|ShiftRegister:inst|ShiftRegister4BIT:inst4|ShiftRegister2BIT:inst2|ShiftRegister1BIT:inst3|inst"
Info (310002): Simulation partitioned into 1 sub-simulations
Info (328053): Simulation coverage is     100.00 %
Info (328052): Number of transitions in simulation is 11600
Info (324045): Vector file ShiftRegister.sim.vwf is saved in VWF text format. You can compress it into CVWF format in order to reduce file size. For more details please refer to the Quartus II Help.
Info: Quartus II 64-Bit Simulator was successful. 0 errors, 1 warning
    Info: Peak virtual memory: 4441 megabytes
    Info: Processing ended: Tue Apr 13 13:12:20 2021
    Info: Elapsed time: 00:00:01
    Info: Total CPU time (on all processors): 00:00:01


